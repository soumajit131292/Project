
package com.bridgelabz.programming.oops.addressbook;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;

public class Friend {

	private String firstname;
	private String lastname;
	private String address;
	private String city;
	private String state;
	private int zipcode;
	private String phonenumber;
	
	public Friend()
	
	{}
	
	public Friend(String firstname,String lastname,String address,String city,String state,int zipcode,String phonenumber)
	{
		this.firstname=firstname;
		this.lastname=lastname;
		this.address=address;
		this.city=city;
		this.state=state;
		this.zipcode=zipcode;
		this.phonenumber=phonenumber;
		
		
	}


	public void setFirstname(String firstname) {
		this.firstname = firstname;
	}

	public void setlasttname(String lasttname) {
		this.lastname = lasttname;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	public void setCity(String city) {
		this.city = city;
	}

	public void setZipcode(int zipcode) {
		this.zipcode = zipcode;
	}

	public void setState(String state) {
		this.state = state;
	}

	public void setPhonenumber(String phonenumber) {
		this.phonenumber = phonenumber;
	}

	public String getFirstname() {
		return firstname;
	}

	public String getLastname() {
		return lastname;
	}

	public String getAddress() {
		return address;
	}

	public String getCity() {
		return city;
	}

	public String getState() {
		return state;
	}

	public int getZipcode() {
		return zipcode;
	}

	public String setPhonenumber() {
		return phonenumber;
	}
	/*
	 * public String toString() { return firstname+" "+lastname+" "+address; }
	 */

	Comparator<Friend> com = new Comparator<Friend>() {
		public int compare(Friend o1, Friend o2) {

			if (o1.getZipcode() > (o2.getZipcode()))
				return 1;
			else if (o1.getZipcode() < (o2.getZipcode()))
				return -1;
			else {
				return o1.getFirstname().compareTo(o2.getFirstname());

			}
		}
	};
	Comparator<Friend> com1 = new Comparator<Friend>() {
		public int compare(Friend o1, Friend o2) {

			int result = o1.getLastname().compareTo(o2.getLastname());
			if (result == 0) {
				return o1.getFirstname().compareTo(o2.getFirstname());
			}
			return result;

		}
	};

	public ArrayList<Friend> sortLastnameFriend(ArrayList<Friend> array) throws Exception {

		Collections.sort(array, com1);
		return array;

	}

	public ArrayList<Friend> sortZipcodeFriend(ArrayList<Friend> array) throws Exception {

		Collections.sort(array, com);
		return array;

	}

}
